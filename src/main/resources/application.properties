spring.application.name=rag
server.port=8080
#spring ai setting


# Ollama Chat Settings
spring.ai.ollama.chat.enabled=true
spring.ai.model.embedding=ollama
spring.ai.ollama.init.embedding.include=true
spring.ai.ollama.chat.base-url=http://localhost:11434
spring.ai.ollama.chat.options.model= qwen3:0.6b
#qwen3:0.6b
#gemma3:1b-it-qat
spring.ai.ollama.embedding.options.model=mxbai-embed-large:335m
#nomic-embed-text
spring.ai.ollama.chat.options.temperature=0.2

#open Ai chat settings
spring.ai.openai.api-key=${OPENAI_API_KEY}
spring.ai.openai.chat.enabled=true
spring.ai.retry.max-attempts=10

#anthropic ai
spring.ai.anthropic.api-key=${ANTHROPIC_API_KEY}


spring.autoconfigure.exclude=org.springframework.ai.autoconfigure.openai.OpenAiAutoConfiguration
spring.main.allow-bean-definition-overriding=true

# PostgreSQL Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/springdb
spring.datasource.username=postgres
spring.datasource.password=aryan
spring.datasource.driver-class-name=org.postgresql.Driver

#chatmemory
spring.ai.chat.memory.repository.jdbc.initialize-schema = embedded
spring.ai.chat.memory.repository.jdbc.schema=classpath:/sql/chatmemoryschema.sql

# Hibernate JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# RAG Configuration
vector.store.filename=vectorStore.json
vector.store.path=./data
rag.faq.path=classpath:/docs/cricket.txt

# Text splitting
rag.text.splitter.chunk.size=800
rag.text.splitter.chunk.overlap=400

# pgvector settings
spring.ai.pgvector.pgvector.index-type=HNSW
spring.ai.pgvector.pgvector.distance-type=COSINE_DISTANCE
spring.ai.pgvector.pgvector.dimensions=1500
spring.ai.pgvector.max-document-batch-size=10000 

# Logging
logging.level.com.example.rag=DEBUG

